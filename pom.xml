<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>ru.klavogonki.kgparser</groupId>
	<artifactId>kgparser</artifactId>
	<version>1.0</version>
	<name>kgparser-parent</name>
	<packaging>pom</packaging>

	<modules>
		<module>kgparserSrv</module> <!-- relative path to module-->
		<module>kgparserWeb</module> <!-- relative path to module-->
		<module>kgstatsSrv</module>	<!-- relative path to module-->
		<module>kgstatsWeb</module> <!-- relative path to module-->
	</modules>

	<properties>
		<java.version>11</java.version>
		<org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
		<lombok.version>1.18.16</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<freemarker.version>2.3.30</freemarker.version>
		<springboot.version>2.4.1</springboot.version>
		<jackson.version>2.12.1</jackson.version>
		<poi.version>4.1.2</poi.version>
		<zip4j.version>2.6.4</zip4j.version>
		<log4j2.version>2.17.1</log4j2.version>
		<mysql-connector-java.version>8.0.22</mysql-connector-java.version>
		<commons-lang3.version>3.11</commons-lang3.version>
		<commons-io.version>2.8.0</commons-io.version>
		<commons-fileupload.version>1.4</commons-fileupload.version>
		<httpclient.version>4.5.13</httpclient.version>

		<!-- Open API Generator -->
		<jackson-databind-nullable-version>0.2.0</jackson-databind-nullable-version>
		<swagger-annotations-version>1.5.8</swagger-annotations-version>

		<!-- plugin versions -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
		<maven-war-plugin.version>2.1.1</maven-war-plugin.version>
		<maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<openapi-generator-maven-plugin.version>5.0.0</openapi-generator-maven-plugin.version>
		<build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>

		<!-- test frameworks -->
		<junit-jupiter.version>5.7.0</junit-jupiter.version>
		<assertj-core.version>3.18.1</assertj-core.version>
		<assertj-assertions-generator-maven-plugin.version>2.2.0</assertj-assertions-generator-maven-plugin.version>

		<!-- libraries used for old modules, probably with old versions. May also be used by Kefir. -->
		<servlet-api.version>2.5</servlet-api.version>
		<persistence-api.version>1.0</persistence-api.version>
		<javaee-api.version>6.0</javaee-api.version>
		<org.json.json.version>20131018</org.json.json.version>
		<org.htmlparser.thumbelina.version>2.1</org.htmlparser.thumbelina.version>
		<kefir-util.version>1.0</kefir-util.version>
		<kefir-srv.version>1.0</kefir-srv.version>

		<!-- standard properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.4</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>11</source>  <!-- same as <java.version> -->
					<target>11</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<show>private</show>
					<!-- see https://stackoverflow.com/a/61884267/8534088 -->
					<detectJavaApiLink>false</detectJavaApiLink>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>javadoc</goal>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- see https://stackoverflow.com/a/37280943/8534088-->
	<!-- dependencies will be ALWAYS inherited by all child modules -->

	<dependencies>
		<!-- Use log4j2 instead of slf4j -->
		<!-- see https://stackoverflow.com/a/41500347/8534088 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- todo: think about defining maven-compiler-plugin with lombok also in parent (see kgparser-springboot module) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<!-- Test frameworks -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- todo: think about defining assertj-assertions-generator-maven-plugin also in parent (see kgparser-springboot module) -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!-- see https://stackoverflow.com/a/41500347/8534088 -->
	<!-- dependencyManagement - just define versions in the parent, you still need to specify them in the child modules, but without <version> -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- log4j1 used by kefir classes from which we extend or use (JsonServlet, JsonObject, FileUtils usw) -->
			<!-- todo: remove kefir usage or migrate kefir to log4j2 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-1.2-api</artifactId>
				<version>${log4j2.version}</version>
				<!--
			<scope>provided</scope><optional>true</optional>
-->
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org.json.json.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>su.opencode.kefir</groupId>
				<artifactId>kefir-util</artifactId>
				<version>${kefir-util.version}</version>
				<optional>true</optional>
				<scope>system</scope>
				<systemPath>${maven.multiModuleProjectDirectory}/jboss-libs/kefir-util-1.0.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>su.opencode.kefir</groupId>
				<artifactId>kefir-srv</artifactId>
				<version>${kefir-srv.version}</version>
				<optional>true</optional>
				<scope>system</scope>
				<systemPath>${maven.multiModuleProjectDirectory}/jboss-libs/kefir-srv-1.0.jar</systemPath>
			</dependency>

			<dependency>
				<!-- server module dependency -->
				<groupId>ru.klavogonki.kgparser</groupId>
				<artifactId>kgparser-srv</artifactId>
				<version>1.0</version>
				<scope>compile</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>${persistence-api.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javaee-api.version}</version>
				<scope>compile</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<scope>compile</scope>
				<optional>true</optional>
			</dependency>

			<!-- Html Parser - used in HtmlParserTest only -->
			<dependency>
				<groupId>org.htmlparser</groupId>
				<artifactId>thumbelina</artifactId>
				<version>${org.htmlparser.thumbelina.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<!-- Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${springboot.version}</version>
			</dependency>

			<!-- Enable javax.validation in SpringBoot -->
			<!-- see https://nullbeans.com/how-to-use-java-bean-validation-in-spring-boot/ -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${springboot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${springboot.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Exclude Spring Boot's Default Logging -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${springboot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-log4j2</artifactId>
				<version>${springboot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- mapstruct -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>

			<!-- FreeMarker -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- POI -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<!-- MySQL -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>

			<!-- Zip4j - useful library for easily zipping/unzipping files -->
			<dependency>
				<groupId>net.lingala.zip4j</groupId>
				<artifactId>zip4j</artifactId>
				<version>${zip4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<developers>
		<developer>
			<id>nosferatum</id>
			<name>Dmitriy Popov</name>
			<email>dmitry.weirdo@gmail.com</email>
			<timezone>+1</timezone>
		</developer>
	</developers>

</project>
